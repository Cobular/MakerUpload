{"version":3,"file":"types.js","sources":["../../src/types/firestore.ts","../../src/types/index.ts"],"sourcesContent":["import { TargetMachine } from \"./index\";\n\nexport interface DocumentData {\n  creation_time: Date;\n  download_url: string;\n  target_machine: TargetMachine;\n  name: string;\n  uid: string;\n}\n\nexport interface RawDocumentData {\n  creation_time: {\n    timestampValue: string;\n  };\n  download_url: {\n    stringValue: string;\n  };\n  target_machine: {\n    stringValue: TargetMachine;\n  };\n  uid: {\n    stringValue: string;\n  };\n  name: {\n    stringValue: string;\n  }\n}\nexport interface FirestoreDocument {\n  name: string;\n  fields: RawDocumentData;\n  createTime: string;\n  updateTime?: string;\n}\n\n\nexport function IsDocument(value: unknown): value is DocumentData {\n  return (\n    typeof value === \"object\" &&\n    value !== null &&\n    \"creation_time\" in value &&\n    \"download_url\" in value\n  );\n}\n\nexport function IsRawDocument(value: unknown): value is RawDocumentData {\n  return (\n    typeof value === \"object\" &&\n    value !== null &&\n    \"creation_time\" in value &&\n    \"download_url\" in value &&\n    \"target_machine\" in value\n  );\n}\n\nexport function IsFirestoreDocument(\n  value: unknown\n): value is FirestoreDocument {\n  return (\n    typeof value === \"object\" &&\n    value !== null &&\n    \"name\" in value &&\n    \"fields\" in value &&\n    IsRawDocument(value.fields)\n  );\n}\n\nexport function IsFirestoreDocumentList(\n  value: unknown\n): value is FirestoreDocument[] {\n  return (\n    Array.isArray(value) && value.every((item) => IsFirestoreDocument(item))\n  );\n}\n","export * from \"./firestore\"\n\nexport const target_machines = [\"3DPrinter\", \"Sewing\"] as const;\n\nexport type TargetMachine = (typeof target_machines)[number];\n\nexport function IsTargetMachine(value: unknown): value is TargetMachine {\n  return (\n    typeof value === \"string\" &&\n    target_machines.includes(value as unknown as TargetMachine)\n  );\n}\n"],"names":[],"mappings":";;AAmCO,SAAS,WAAW,KAAuC,EAAA;AAChE,EAAA,OACE,OAAO,KAAU,KAAA,QAAA,IACjB,UAAU,IACV,IAAA,eAAA,IAAmB,SACnB,cAAkB,IAAA,KAAA,CAAA;AAEtB,CAAA;AAEO,SAAS,cAAc,KAA0C,EAAA;AACtE,EACE,OAAA,OAAO,UAAU,QACjB,IAAA,KAAA,KAAU,QACV,eAAmB,IAAA,KAAA,IACnB,cAAkB,IAAA,KAAA,IAClB,gBAAoB,IAAA,KAAA,CAAA;AAExB,CAAA;AAEO,SAAS,oBACd,KAC4B,EAAA;AAC5B,EACE,OAAA,OAAO,KAAU,KAAA,QAAA,IACjB,KAAU,KAAA,IAAA,IACV,MAAU,IAAA,KAAA,IACV,QAAY,IAAA,KAAA,IACZ,aAAc,CAAA,KAAA,CAAM,MAAM,CAAA,CAAA;AAE9B,CAAA;AAEO,SAAS,wBACd,KAC8B,EAAA;AAC9B,EACE,OAAA,KAAA,CAAM,OAAQ,CAAA,KAAK,CAAK,IAAA,KAAA,CAAM,MAAM,CAAC,IAAA,KAAS,mBAAoB,CAAA,IAAI,CAAC,CAAA,CAAA;AAE3E;;ACtEa,MAAA,eAAA,GAAkB,CAAC,WAAA,EAAa,QAAQ,EAAA;AAI9C,SAAS,gBAAgB,KAAwC,EAAA;AACtE,EAAA,OACE,OAAO,KAAA,KAAU,QACjB,IAAA,eAAA,CAAgB,SAAS,KAAiC,CAAA,CAAA;AAE9D;;;;;;;;;"}